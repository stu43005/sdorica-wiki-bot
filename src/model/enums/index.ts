import { AbilityType } from "./ability-type.enum.js";
import { AchievementType } from "./achievement-type.enum.js";
import { AvatarType } from "./avatar-type.enum.js";
import { BlessEffectType } from "./bless-effect-type.enum.js";
import { BlessPosition } from "./bless-position.enum.js";
import { BuildInType } from "./build-in-type.enum.js";
import { CategoryState } from "./category-state.enum.js";
import { ChapteCountType } from "./chapte-count-type.enum.js";
import { ChapterCategory } from "./chapter-category.enum.js";
import { ChapterGroup } from "./chapter-group.enum.js";
import { ChapterMainImageType } from "./chapter-main-image-type.enum.js";
import { ChapterState } from "./chapter-state.enum.js";
import { CharacterSeriesType } from "./character-series-type.enum.js";
import { ChestCategory } from "./chest-category.enum.js";
import { CompareType } from "./compare-type.enum.js";
import { ConditionPassType } from "./condition-pass-type.enum.js";
import { ConditionType } from "./condition-type.enum.js";
import { Currency } from "./currency.enum.js";
import { DiligentType } from "./diligent-type.enum.js";
import { DropItemCategory } from "./drop-item-category.enum.js";
import { DropRuleCategory } from "./drop-rule-category.enum.js";
import { DropTimeCategory } from "./drop-time-category.enum.js";
import { EncounterEffectCategory } from "./encounter-effect-category.enum.js";
import { EvaluateAchievementType } from "./evaluate-achievement-type.enum.js";
import { ExpeditionType } from "./expedition-type.enum.js";
import { ExploreBuildingType } from "./explore-building-type.enum.js";
import { ExploreConditionType } from "./explore-condition-type.enum.js";
import { ExploreFlagOperate } from "./explore-flag-operate.enum.js";
import { ExploreFlagTarget } from "./explore-flag-target.enum.js";
import { ExploreFlagsDestroyAfterResetTime } from "./explore-flags-destroy-after-reset-time.enum.js";
import { ExploreFlagsType } from "./explore-flags-type.enum.js";
import { ExploreItemCategory } from "./explore-item-category.enum.js";
import { ExploreItemPortable } from "./explore-item-portable.enum.js";
import { ExploreItemsCategory } from "./explore-items-category.enum.js";
import { ExploreItemsTab } from "./explore-items-tab.enum.js";
import { ExploreItemsTarget } from "./explore-items-target.enum.js";
import { FlagUIType } from "./flag-ui-type.enum.js";
import { GashaponCategory } from "./gashapon-category.enum.js";
import { GashaponPackType } from "./gashapon-pack-type.enum.js";
import { GenderType } from "./gender-type.enum.js";
import { GiveType } from "./give-type.enum.js";
import { HeroSkillType } from "./hero-skill-type.enum.js";
import { HeroType } from "./hero-type.enum.js";
import { HeroViewableType } from "./hero-viewable-type.enum.js";
import { ItemCategory } from "./item-category.enum.js";
import { ItemType } from "./item-type.enum.js";
import { JumpType } from "./jump-type.enum.js";
import { MissionType } from "./mission-type.enum.js";
import { PayType } from "./pay-type.enum.js";
import { QuestModeBonusType } from "./quest-mode-bonus-type.enum.js";
import { RankUpItemCategory } from "./rank-up-item-category.enum.js";
import { RankUpItemRefCategory } from "./rank-up-item-ref-category.enum.js";
import { RewardGroupTargetType } from "./reward-group-target-type.enum.js";
import { RewardGroupType } from "./reward-group-type.enum.js";
import { Rewardrefreshrule } from "./rewardrefreshrule.enum.js";
import { RuleType } from "./rule-type.enum.js";
import { SkillType } from "./skill-type.enum.js";
import { SpecialCategory } from "./special-category.enum.js";
import { Stackable } from "./stackable.enum.js";
import { StateCondition } from "./state-condition.enum.js";
import { StoneEraseType } from "./stone-erase-type.enum.js";
import { StoreItemCategory } from "./store-item-category.enum.js";
import { SweepUnlockType } from "./sweep-unlock-type.enum.js";
import { TargetType } from "./target-type.enum.js";
import { TavernMissionSkillType } from "./tavern-mission-skill-type.enum.js";
import { TavernMissionType } from "./tavern-mission-type.enum.js";
import { TimeDisplayType } from "./time-display-type.enum.js";
import { TitleViewType } from "./title-view-type.enum.js";
import { TriggerType } from "./trigger-type.enum.js";
import { TutorialDialogType } from "./tutorial-dialog-type.enum.js";
import { Volume } from "./volume.enum.js";

export type EnumList = {
	"enum:AbilityType": AbilityType;
	"enum:AchievementType": AchievementType;
	"enum:AvatarType": AvatarType;
	"enum:BlessEffectType": BlessEffectType;
	"enum:BlessPosition": BlessPosition;
	"enum:BuildInType": BuildInType;
	"enum:CategoryState": CategoryState;
	"enum:ChapteCountType": ChapteCountType;
	"enum:ChapterCategory": ChapterCategory;
	"enum:ChapterGroup": ChapterGroup;
	"enum:ChapterMainImageType": ChapterMainImageType;
	"enum:ChapterState": ChapterState;
	"enum:CharacterSeriesType": CharacterSeriesType;
	"enum:ChestCategory": ChestCategory;
	"enum:CompareType": CompareType;
	"enum:ConditionPassType": ConditionPassType;
	"enum:ConditionType": ConditionType;
	"enum:Currency": Currency;
	"enum:DiligentType": DiligentType;
	"enum:DropItemCategory": DropItemCategory;
	"enum:DropRuleCategory": DropRuleCategory;
	"enum:DropTimeCategory": DropTimeCategory;
	"enum:EncounterEffectCategory": EncounterEffectCategory;
	"enum:EvaluateAchievementType": EvaluateAchievementType;
	"enum:ExpeditionType": ExpeditionType;
	"enum:ExploreBuildingType": ExploreBuildingType;
	"enum:ExploreConditionType": ExploreConditionType;
	"enum:ExploreFlagOperate": ExploreFlagOperate;
	"enum:ExploreFlagTarget": ExploreFlagTarget;
	"enum:ExploreFlagsDestroyAfterResetTime": ExploreFlagsDestroyAfterResetTime;
	"enum:ExploreFlagsType": ExploreFlagsType;
	"enum:ExploreItemCategory": ExploreItemCategory;
	"enum:ExploreItemPortable": ExploreItemPortable;
	"enum:ExploreItemsCategory": ExploreItemsCategory;
	"enum:ExploreItemsTab": ExploreItemsTab;
	"enum:ExploreItemsTarget": ExploreItemsTarget;
	"enum:FlagUIType": FlagUIType;
	"enum:GashaponCategory": GashaponCategory;
	"enum:GashaponPackType": GashaponPackType;
	"enum:GenderType": GenderType;
	"enum:GiveType": GiveType;
	"enum:HeroSkillType": HeroSkillType;
	"enum:HeroType": HeroType;
	"enum:HeroViewableType": HeroViewableType;
	"enum:ItemCategory": ItemCategory;
	"enum:ItemType": ItemType;
	"enum:JumpType": JumpType;
	"enum:MissionType": MissionType;
	"enum:PayType": PayType;
	"enum:QuestModeBonusType": QuestModeBonusType;
	"enum:RankUpItemCategory": RankUpItemCategory;
	"enum:RankUpItemRefCategory": RankUpItemRefCategory;
	"enum:RewardGroupTargetType": RewardGroupTargetType;
	"enum:RewardGroupType": RewardGroupType;
	"enum:Rewardrefreshrule": Rewardrefreshrule;
	"enum:RuleType": RuleType;
	"enum:SkillType": SkillType;
	"enum:SpecialCategory": SpecialCategory;
	"enum:Stackable": Stackable;
	"enum:StateCondition": StateCondition;
	"enum:StoneEraseType": StoneEraseType;
	"enum:StoreItemCategory": StoreItemCategory;
	"enum:SweepUnlockType": SweepUnlockType;
	"enum:TargetType": TargetType;
	"enum:TavernMissionSkillType": TavernMissionSkillType;
	"enum:TavernMissionType": TavernMissionType;
	"enum:TimeDisplayType": TimeDisplayType;
	"enum:TitleViewType": TitleViewType;
	"enum:TriggerType": TriggerType;
	"enum:TutorialDialogType": TutorialDialogType;
	"enum:Volume": Volume;
};
